@page "/Admin"
@using System.Net
@inject WAFContext db
@inject IWAFMiddlewareService wafMiddlewareService

@switch(state) {
    case State.View:
        <table class="data-table">
            <tr>
                <th>Enabled</th>
                <th>Action</th>
                <th>Path</th>
                <th>SourceIP</th>
                <th></th>
            </tr>
            @foreach(var rule in db.Rules) {
                <tr>
                    <td><input @onchange=@((e) => SetEnabled(rule, (bool) e.Value!)) type="checkbox" id="enabled" name="enabled" checked=@rule.Enabled/></td>
                    @if(rule == toEdit) {
                        <td>
                            <select>
                                <option value=@WAFRuleAction.Allow selected=@(toEdit.Action == WAFRuleAction.Allow)>Allow</option>
                                <option value=@WAFRuleAction.Deny selected=@(toEdit.Action == WAFRuleAction.Deny)>Deny</option>
                            </select>
                        </td>
                        <td><input @bind=path type="text"/></td>
                        <td><input @bind=sourceIP type="text"/></td>
                        <td>
                            <a href="javascript:;" @onclick=SubmitEdit>Submit</a>
                            <a href="javascript:;" @onclick=@(() => toEdit = null)>Cancel</a>
                        </td>
                    } else {
                        <td>@rule.Action</td>
                        <td>@rule.Path</td>
                        <td>@rule.SourceIP</td>
                        <td>
                            <a href="javascript:;" @onclick=@(() => Edit(rule))>Edit</a>
                            <a href="javascript:;" @onclick=@(() => Delete(rule))>Delete</a>
                        </td>
                    }
                </tr>
            }
        </table>
        <button @onclick=@(() => state = State.Create)>Create</button>
        break;
    case State.Create:
        <label for="action">Action</label>
        <select @bind=action name="action">
            <option value=@WAFRuleAction.Allow>Allow</option>
            <option value=@WAFRuleAction.Deny>Deny</option>
        </select>
        <label for="path">Path</label>
        <input @bind=path name="path" type="text"/>
        <label for="sourceIP">Source IP</label>
        <input @bind=sourceIP name="sourceIP" type="text"/>
        <button @onclick=Submit>Submit</button>
        break;
}

@code {
    private enum State {
        View,
        Create,
    }

    private string path;
    private string sourceIP;
    private WAFRuleAction action;

    private WAFRule? toEdit = null;

    private State state = State.View;

    public void Edit(WAFRule toEdit) {
        path        = toEdit.Path;
        sourceIP    = toEdit.SourceIP.ToString();
        this.toEdit = toEdit;
    }

    public void Submit() {
        db.Rules.Add(new() {
            Action   = action,
            Path     = path,
            SourceIP = IPAddress.Parse(sourceIP)
        });

        db.SaveChanges();
        wafMiddlewareService.Reload();
        state = State.View;
    }

    public void SubmitEdit() {
        toEdit.Action   = action;
        toEdit.Path     = path;
        toEdit.SourceIP = IPAddress.Parse(sourceIP);
        db.SaveChanges();
        wafMiddlewareService.Reload();
        toEdit = null;
    }

    public void Delete(WAFRule rule) {
        db.Rules.Remove(rule);
        db.SaveChanges();
        wafMiddlewareService.Reload();
    }

    public void SetEnabled(WAFRule rule, bool enabled) {
        rule.Enabled = enabled;
        db.SaveChanges();
        wafMiddlewareService.Reload();
    }
}
