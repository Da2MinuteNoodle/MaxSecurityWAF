@page "/Admin/Rules"
@attribute [Authorize]
@inject WAFContext db
@inject IWAFMiddlewareService wafMiddlewareService

<h2>Firewall Rules</h2>

<table class="data-table">
    <tr>
        <th>Enabled</th>
        <th>Action</th>
        <th>Path</th>
        <th>SourceIP</th>
        <th></th>
    </tr>
    @foreach(var rule in db.Rules) {
        <tr>
            <td><input @onchange=@((e) => SetEnabled(rule, (bool) e.Value!)) type="checkbox" id="enabled" name="enabled" checked=@rule.Enabled/></td>
            @if(rule == toEdit) {
                <td>
                    <select @bind=action>
                        <option value=@WAFRuleAction.Allow selected=@(toEdit.Action == WAFRuleAction.Allow)>Allow</option>
                        <option value=@WAFRuleAction.Deny selected=@(toEdit.Action == WAFRuleAction.Deny)>Deny</option>
                    </select>
                </td>
                <td><input @bind=path type="text"/></td>
                <td><input @bind=sourceIP type="text"/></td>
                <td>
                    <a href="javascript:;" @onclick=@(() => toEdit = null)>Cancel</a>
                    <a href="javascript:;" @onclick=SubmitEdit>Submit</a>
                </td>
            } else {
                <td>@rule.Action</td>
                <td>@rule.Path</td>
                <td>@rule.SourceIP</td>
                <td>
                    <a href="javascript:;" @onclick=@(() => Edit(rule))>Edit</a>
                    <a href="javascript:;" @onclick=@(() => Delete(rule))>Delete</a>
                </td>
            }
        </tr>
    }
    @for(int i = 0; i < 10 - db.Rules.Count(); i++) {
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
    }
    @if(create) {
        <tr>
            <td><input type="checkbox"/></td>
            <td>
                <select @bind=action name="action">
                    <option value=@WAFRuleAction.Allow>Allow</option>
                    <option value=@WAFRuleAction.Deny>Deny</option>
                </select>
            </td>
            <td>/<input @bind=path name="path" type="text" placeholder="path"/>/</td>
            <td><input @bind=sourceIP name="sourceIP" type="text" placeholder="eg; 192.168.1.1"/></td>
            <td>
                <a href="javascript:;" @onclick=@(() => create = false)>Cancel</a>
                <a id="submit" href="javascript:;" @onclick=Submit>Submit</a>
            </td>
        </tr>
    } else {
        <tr>
            <td colspan="5">
                <center>
                    <a href="javascript:;" @onclick=@(() => create = true)>Create a new rule</a>
                </center>
            </td>
        </tr>
    }
</table>

@code {
    private string        path;
    private string        sourceIP;
    private WAFRuleAction action;

    private WAFRule? toEdit = null;

    private bool create = false;

    public void Edit(WAFRule toEdit) {
        path        = toEdit.Path;
        sourceIP    = toEdit.SourceIP.ToString();
        this.toEdit = toEdit;
    }

    public void Submit() {
        db.Rules.Add(new() {
            Action   = action,
            Path     = path,
            SourceIP = IPAddress.Parse(sourceIP)
        });

        db.SaveChanges();
        wafMiddlewareService.Reload();
        create = false;
    }

    public void SubmitEdit() {
        toEdit.Action   = action;
        toEdit.Path     = path;
        toEdit.SourceIP = IPAddress.Parse(sourceIP);
        db.SaveChanges();
        wafMiddlewareService.Reload();
        toEdit = null;
    }

    public void Delete(WAFRule rule) {
        db.Rules.Remove(rule);
        db.SaveChanges();
        wafMiddlewareService.Reload();
    }

    public void SetEnabled(WAFRule rule, bool enabled) {
        rule.Enabled = enabled;
        db.SaveChanges();
        wafMiddlewareService.Reload();
    }
}
